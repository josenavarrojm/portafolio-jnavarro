import type { Metadata } from "next";
import { ThemeProvider } from "next-themes";

import {
  geistMono,
  geistSans,
  anton,
  bebasNeue,
  archivoBlack,
  spaceGrotesk,
  oswald,
  leagueSpartan,
  barlowCondensed,
  archivoNarrow,
  teko,
} from "@/fonts/fonts";
import "./globals.css";
import { NextIntlClientProvider, hasLocale } from "next-intl";
import { notFound } from "next/navigation";
import { routing } from "@/i18n/routing";
import { getMessages } from "next-intl/server";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export async function generateStaticParams() {
  return [{ lang: "en" }, { lang: "es" }];
}

export default async function LocaleLayout({
  children,
  params,
}: {
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}) {
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  const messages = await getMessages();

  return (
    <html lang={locale} suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} ${bebasNeue.variable} ${spaceGrotesk.variable} ${anton.variable} ${archivoBlack.variable}
        ${oswald.variable}
        ${leagueSpartan.variable}
        ${barlowCondensed.variable}
        ${archivoNarrow.variable}
        ${teko.variable}
        antialiased`}
      >
        <ThemeProvider
          enableSystem
          attribute="class"
          defaultTheme="system"
          disableTransitionOnChange
        >
          <NextIntlClientProvider messages={messages}>
            {children}
          </NextIntlClientProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}
